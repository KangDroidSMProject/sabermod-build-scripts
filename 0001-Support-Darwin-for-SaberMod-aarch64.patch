From 3deba845c798426f664a6c7e953c76ef5ccbe364 Mon Sep 17 00:00:00 2001
From: KangDroid <hyunwoo286@gmail.com>
Date: Wed, 29 Jul 2015 02:16:17 +0100
Subject: [PATCH] Support Darwin for SaberMod-aarch64

---
 aarch64/darwin/aarch64-4.9               | 23 ++++++++++++-----------
 aarch64/darwin/aarch64-5.1               | 19 ++++++++++---------
 aarch64/darwin/aarch64-5.2               | 18 ++++++++++--------
 aarch64/darwin/aarch64-6.0               | 19 ++++++++++---------
 aarch64/darwin/aarch64-linux-android-4.9 | 21 +++++++++++----------
 5 files changed, 53 insertions(+), 47 deletions(-)

diff --git a/aarch64/darwin/aarch64-4.9 b/aarch64/darwin/aarch64-4.9
index a8faf3b..5585448 100755
--- a/aarch64/darwin/aarch64-4.9
+++ b/aarch64/darwin/aarch64-4.9
@@ -51,7 +51,7 @@ export SET_CLOOG_VERSION=0.18.4;
 export SET_ISL_VERSION=0.15;
 export TARGET_MPFR_LIB_VERSION=6.0.0;
 export TARGET_GMP_LIB_VERSION=10.2.0;
-export SET_HOST_BUILD=x86_64-linux-gnu;
+export SET_HOST_BUILD=x86_64-apple-darwin;
 export SET_TARGET=aarch64-linux-gnu;
 export SET_TARGET_GCC=aarch64-gcc;
 export SET_TARGET_GCC_LIB_PATH="lib/gcc/$SET_TARGET/$SET_TARGET_GCC_MAJOR.$SET_TARGET_GCC_MINOR.x-sabermod";
@@ -81,7 +81,9 @@ cd $TOOLCHAIN_ROOT_SYMBOLIC/build;
 export BUILD_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )";
 
 # Try to parallelize the build for faster performance.
-export JOBS="$(cat /proc/cpuinfo | grep -c processor)";
+CORES=`sysctl -a | grep machdep.cpu | grep core_count | awk '{print $2}'`;
+THREADS=`sysctl -a | grep machdep.cpu | grep thread_count | awk '{print $2}'`;
+JOBS="$((($CORES * $THREADS) / 2))";
 
 # Determine Make flags
 export MAKE_FLAGS=-j"$JOBS";
@@ -123,9 +125,9 @@ export HOST_PREFIX_PATH=$TOOLCHAIN_PREFIX_PATH;
 export HOST_LIB_PATH=$HOST_PREFIX_PATH/lib;
 export HOST_INC_PATH=$HOST_PREFIX_PATH/include;
 export HOST_PREFIX=--prefix=$HOST_PREFIX_PATH;
-export CLOOG_INSTALLED=$HOST_LIB_PATH/libcloog-isl.so.4;
-export MPFR_INSTALLED=$HOST_LIB_PATH/libmpfr.so.$TARGET_MPFR_LIB_VERSION;
-export GMP_INSTALLED=$HOST_LIB_PATH/libgmp.so.$TARGET_GMP_LIB_VERSION;
+export CLOOG_INSTALLED=$HOST_LIB_PATH/libcloog-isl.4.dylib;
+export MPFR_INSTALLED=$HOST_LIB_PATH/libmpfr.6.dylib;
+export GMP_INSTALLED=$HOST_LIB_PATH/libgmp.10.dylib;
 
 # Build and install cloog, isl and osl libraries into the toolchain.
 
@@ -133,7 +135,7 @@ export GMP_INSTALLED=$HOST_LIB_PATH/libgmp.so.$TARGET_GMP_LIB_VERSION;
 export SET_TARGET_BUILD=CLOOG;
 
 # Make sure ISL is on the right 0.15 branch
-cd $TOOLCHAIN_ROOT_SYMBOLIC/isl/isl-$SET_ISL_VERSION && git fetch sm gcc-5 && git checkout FETCH_HEAD;
+cd $TOOLCHAIN_ROOT_SYMBOLIC/isl/isl-$SET_ISL_VERSION && git fetch github test && git checkout FETCH_HEAD;
 
 # Cloog Build Configuration
 cd $TOOLCHAIN_ROOT_SYMBOLIC/cloog/cloog-$SET_CLOOG_VERSION && ./configure $HOST_PREFIX --with-isl=bundled --with-osl=bundled --with-gmp=system --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET;
@@ -254,8 +256,7 @@ if [ $CLOOG_INSTALLED = "yes" ] && [ $MPFR_INSTALLED = "yes" ] && [ $GMP_INSTALL
 then
 
     # Make a system link for older version of libisl using the newer version for older systems
-    cd $HOST_LIB_PATH && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.10 && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.13.1.0 && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.13.1.1 && cd $BUILD_PATH;
-    sleep 5;
+    cd $HOST_LIB_PATH && ln -s libisl.13.dylib libisl.10.dylib && cd $BUILD_PATH;
 
     echo "Preparing sabermod toolchain sources ...";
     echo "";
@@ -269,7 +270,7 @@ then
         cd $TOOLCHAIN_ROOT_SYMBOLIC/sysroot && rm -rf * && git reset --hard && git fetch sm gcc-4.9 && git checkout FETCH_HEAD && cd $BUILD_PATH;
         export SYSROOT_SRC_PATH=$TOOLCHAIN_ROOT_SYMBOLIC/sysroot/arch-arm64;
         export SYSROOT_DEST_PATH=$TOOLCHAIN_PREFIX_PATH/arch-arm64;
-        cp -R $SYSROOT_SRC_PATH -f $SYSROOT_DEST_PATH;
+        cp -vr $SYSROOT_SRC_PATH $SYSROOT_DEST_PATH;
         export SYSROOT=--with-sysroot=$SYSROOT_DEST_PATH;
     fi;
 
@@ -296,10 +297,10 @@ then
     # GCC Build Configuration
     if [ $VER = "4.9.x" ];
     then
-        ./configure $TOOLCHAIN_PREFIX $SYSROOT --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET --program-transform-name='s&^&aarch64-&' --with-gcc-version=SaberMod --with-binutils-version=android --with-gmp-version=gnu --with-mpfr-version=gnu --with-gdb-version=android --with-mpc-version=gnu --with-cloog-version=$SET_CLOOG_VERSION --with-isl-version=$SET_ISL_VERSION --enable-graphite=yes --enable-ld=default --disable-gold --enable-plugins --disable-option-checking --disable-bootstrap --disable-libmudflap --disable-libquadmath --disable-libsanitizer --enable-initfini-array "--enable-eh-frame-hdr-for-static" --enable-fix-cortex-a53-835769 --with-host-libstdcxx='-static-libgcc -Wl,-Bstatic,-lstdc++,-Bdynamic -lm' --with-gxx-include-dir=$SYSROOT_DEST_PATH/c++ --enable-multilib --with-libexpat --with-python --with-gnu-ld --with-gnu-as --disable-werror --with-bugurl=mailto:sabermod.team@gmail.com --disable-libsanitizer --disable-libgomp --disable-libatomic --enable-silent-rules;
+        ./configure $TOOLCHAIN_PREFIX $SYSROOT --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET --program-transform-name='s&^&aarch64-&' --with-gcc-version=SaberMod --with-binutils-version=android --with-gmp-version=gnu --with-mpfr-version=gnu --with-gdb-version=android --with-mpc-version=gnu --with-cloog-version=$SET_CLOOG_VERSION --with-isl-version=$SET_ISL_VERSION --enable-graphite=yes --enable-ld=default --disable-gold --enable-plugins --disable-option-checking --disable-bootstrap --disable-libmudflap --disable-libquadmath --disable-libsanitizer --enable-initfini-array "--enable-eh-frame-hdr-for-static" --enable-fix-cortex-a53-835769 --with-host-libstdcxx='-static-libgcc -lstdc++ -lm' --with-gxx-include-dir=$SYSROOT_DEST_PATH/c++ --enable-multilib --with-libexpat --with-python --with-gnu-ld --with-gnu-as --disable-werror --with-bugurl=mailto:sabermod.team@gmail.com --disable-libsanitizer --disable-libgomp --disable-libatomic --enable-silent-rules;
     elif [ $VER = "4.9.4" ];
     then
-        ./configure $TOOLCHAIN_PREFIX --with-sysroot=/ --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET --program-transform-name='s&^&aarch64-&' --with-gcc-version=SaberMod --with-binutils-version=gnu --with-gmp-version=gnu --with-mpfr-version=gnu --with-gdb-version=gnu --with-mpc-version=gnu --with-cloog-version=$SET_CLOOG_VERSION --with-isl-version=$SET_ISL_VERSION --enable-graphite=yes --enable-ld=default --disable-gold --enable-plugins --disable-option-checking --disable-bootstrap --disable-libmudflap --disable-libquadmath --disable-libsanitizer --enable-initfini-array "--enable-eh-frame-hdr-for-static" --enable-fix-cortex-a53-835769 --with-host-libstdcxx='-static-libgcc -Wl,-Bstatic,-lstdc++,-Bdynamic -lm' --with-gxx-include-dir=/usr/aarch64-linux-gnu/include/c++/$SET_SYSTEM_GCC_VERSION --enable-multilib --with-libexpat --with-python --with-gnu-ld --with-gnu-as --disable-werror --with-bugurl=mailto:sabermod.team@gmail.com --disable-libsanitizer --disable-libgomp --disable-libatomic --enable-silent-rules;
+        ./configure $TOOLCHAIN_PREFIX --with-sysroot=/ --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET --program-transform-name='s&^&aarch64-&' --with-gcc-version=SaberMod --with-binutils-version=gnu --with-gmp-version=gnu --with-mpfr-version=gnu --with-gdb-version=gnu --with-mpc-version=gnu --with-cloog-version=$SET_CLOOG_VERSION --with-isl-version=$SET_ISL_VERSION --enable-graphite=yes --enable-ld=default --disable-gold --enable-plugins --disable-option-checking --disable-bootstrap --disable-libmudflap --disable-libquadmath --disable-libsanitizer --enable-initfini-array "--enable-eh-frame-hdr-for-static" --enable-fix-cortex-a53-835769 --with-host-libstdcxx='-static-libgcc -lstdc++ -lm' --with-gxx-include-dir=/usr/aarch64-linux-gnu/include/c++/$SET_SYSTEM_GCC_VERSION --enable-multilib --with-libexpat --with-python --with-gnu-ld --with-gnu-as --disable-werror --with-bugurl=mailto:sabermod.team@gmail.com --disable-libsanitizer --disable-libgomp --disable-libatomic --enable-silent-rules;
     else
         echo "Can not determine gcc version to build, exiting";
         exit 1;
diff --git a/aarch64/darwin/aarch64-5.1 b/aarch64/darwin/aarch64-5.1
index fb01102..a70af61 100755
--- a/aarch64/darwin/aarch64-5.1
+++ b/aarch64/darwin/aarch64-5.1
@@ -28,7 +28,7 @@ export SET_TARGET_GCC_MAJOR=5;
 export SET_TARGET_GCC_MINOR=1;
 export SET_SYSTEM_GCC_VERSION=4.9.1;
 export SET_ISL_VERSION=0.15;
-export SET_HOST_BUILD=x86_64-linux-gnu;
+export SET_HOST_BUILD=x86_64-apple-darwin;
 export SET_TARGET=aarch64-linux-gnu;
 export SET_TARGET_GCC=aarch64-gcc;
 export SET_TARGET_GCC_LIB_PATH="lib/gcc/$SET_TARGET/$SET_TARGET_GCC_MAJOR.$SET_TARGET_GCC_MINOR.x-sabermod";
@@ -60,7 +60,9 @@ cd $TOOLCHAIN_ROOT_SYMBOLIC/build;
 export BUILD_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )";
 
 # Try to parallelize the build for faster performance.
-export JOBS="$(cat /proc/cpuinfo | grep -c processor)";
+CORES=`sysctl -a | grep machdep.cpu | grep core_count | awk '{print $2}'`;
+THREADS=`sysctl -a | grep machdep.cpu | grep thread_count | awk '{print $2}'`;
+JOBS="$((($CORES * $THREADS) / 2))";
 
 # Determine Make flags
 export MAKE_FLAGS=-j"$JOBS";
@@ -102,16 +104,16 @@ export HOST_PREFIX_PATH=$TOOLCHAIN_PREFIX_PATH;
 export HOST_LIB_PATH=$HOST_PREFIX_PATH/lib;
 export HOST_INC_PATH=$HOST_PREFIX_PATH/include;
 export HOST_PREFIX=--prefix=$HOST_PREFIX_PATH;
-export ISL_INSTALLED=$HOST_LIB_PATH/libisl.so.$TARGET_ISL_LIB_VERSION;
-export MPFR_INSTALLED=$HOST_LIB_PATH/libmpfr.so.$TARGET_MPFR_LIB_VERSION;
-export GMP_INSTALLED=$HOST_LIB_PATH/libgmp.so.$TARGET_GMP_LIB_VERSION;
+export ISL_INSTALLED=$HOST_LIB_PATH/libisl.13.dylib;
+export MPFR_INSTALLED=$HOST_LIB_PATH/libmpfr.6.dylib;
+export GMP_INSTALLED=$HOST_LIB_PATH/libgmp.10.dylib;
 
 # ISL
 
 export SET_TARGET_BUILD=ISL;
 
 # Build and install isl into the toolchain.
-cd $TOOLCHAIN_ROOT_SYMBOLIC/isl/isl-$SET_ISL_VERSION && git fetch sm gcc-5 && git checkout FETCH_HEAD;
+cd $TOOLCHAIN_ROOT_SYMBOLIC/isl/isl-$SET_ISL_VERSION && git fetch github test && git checkout FETCH_HEAD;
 
 # ISL Build Configuration
 ./configure $HOST_PREFIX --with-gmp=system --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET;
@@ -228,8 +230,7 @@ if [ $ISL_INSTALLED = "yes" ] && [ $MPFR_INSTALLED = "yes" ] && [ $GMP_INSTALLED
 then
 
     # Make a system link for older version of libisl using the newer version for older systems
-    cd $HOST_LIB_PATH && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.10 && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.13.1.0 && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.13.1.1 && cd $BUILD_PATH;
-    sleep 5;
+    cd $HOST_LIB_PATH && ln -s libisl.13.dylib libisl.10.dylib && cd $BUILD_PATH;
 
     echo "Preparing sabermod toolchain sources ...";
     echo "";
@@ -245,7 +246,7 @@ then
     export TOOLCHAIN_PREFIX=--prefix=$TOOLCHAIN_PREFIX_PATH;
 
     # GCC Build Configuration
-    ./configure $TOOLCHAIN_PREFIX --with-sysroot=/ --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET --program-transform-name='s&^&aarch64-&' --with-gcc-version=SaberMod --with-binutils-version=gnu --with-gmp-version=gnu --with-mpfr-version=gnu --with-gdb-version=gnu --with-mpc-version=gnu --with-isl-version=$SET_ISL_VERSION --enable-graphite=yes --enable-ld=default --disable-gold --enable-plugins --disable-option-checking --disable-bootstrap --disable-libmudflap --disable-libquadmath --disable-libsanitizer --enable-initfini-array "--enable-eh-frame-hdr-for-static" --enable-fix-cortex-a53-835769 --with-host-libstdcxx='-static-libgcc -Wl,-Bstatic,-lstdc++,-Bdynamic -lm' --with-gxx-include-dir=/usr/aarch64-linux-gnu/include/c++/$SET_SYSTEM_GCC_VERSION --enable-multilib --with-libexpat --with-python --with-gnu-ld --with-gnu-as --disable-werror --with-bugurl=mailto:sabermod.team@gmail.com --disable-libsanitizer --disable-libgomp --disable-libatomic --enable-silent-rules;
+    ./configure $TOOLCHAIN_PREFIX --with-sysroot=/ --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET --program-transform-name='s&^&aarch64-&' --with-gcc-version=SaberMod --with-binutils-version=gnu --with-gmp-version=gnu --with-mpfr-version=gnu --with-gdb-version=gnu --with-mpc-version=gnu --with-isl-version=$SET_ISL_VERSION --enable-graphite=yes --enable-ld=default --disable-gold --enable-plugins --disable-option-checking --disable-bootstrap --disable-libmudflap --disable-libquadmath --disable-libsanitizer --enable-initfini-array "--enable-eh-frame-hdr-for-static" --enable-fix-cortex-a53-835769 --with-host-libstdcxx='-static-libgcc -lstdc++ -lm' --with-gxx-include-dir=/usr/aarch64-linux-gnu/include/c++/$SET_SYSTEM_GCC_VERSION --enable-multilib --with-libexpat --with-python --with-gnu-ld --with-gnu-as --disable-werror --with-bugurl=mailto:sabermod.team@gmail.com --disable-libsanitizer --disable-libgomp --disable-libatomic --enable-silent-rules;
 
     echo "";
     echo "";
diff --git a/aarch64/darwin/aarch64-5.2 b/aarch64/darwin/aarch64-5.2
index 9b47a45..edac397 100755
--- a/aarch64/darwin/aarch64-5.2
+++ b/aarch64/darwin/aarch64-5.2
@@ -28,7 +28,7 @@ export SET_TARGET_GCC_MAJOR=5;
 export SET_TARGET_GCC_MINOR=2;
 export SET_SYSTEM_GCC_VERSION=5.1.1;
 export SET_ISL_VERSION=0.15;
-export SET_HOST_BUILD=x86_64-linux-gnu;
+export SET_HOST_BUILD=x86_64-apple-darwin;
 export SET_TARGET=aarch64-linux-gnu;
 export SET_TARGET_GCC=aarch64-gcc;
 export SET_TARGET_GCC_LIB_PATH="lib/gcc/$SET_TARGET/$SET_TARGET_GCC_MAJOR.$SET_TARGET_GCC_MINOR.x-sabermod";
@@ -60,7 +60,9 @@ cd $TOOLCHAIN_ROOT_SYMBOLIC/build;
 export BUILD_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )";
 
 # Try to parallelize the build for faster performance.
-export JOBS="$(cat /proc/cpuinfo | grep -c processor)";
+CORES=`sysctl -a | grep machdep.cpu | grep core_count | awk '{print $2}'`;
+THREADS=`sysctl -a | grep machdep.cpu | grep thread_count | awk '{print $2}'`;
+JOBS="$((($CORES * $THREADS) / 2))";
 
 # Determine Make flags
 export MAKE_FLAGS=-j"$JOBS";
@@ -102,16 +104,16 @@ export HOST_PREFIX_PATH=$TOOLCHAIN_PREFIX_PATH;
 export HOST_LIB_PATH=$HOST_PREFIX_PATH/lib;
 export HOST_INC_PATH=$HOST_PREFIX_PATH/include;
 export HOST_PREFIX=--prefix=$HOST_PREFIX_PATH;
-export ISL_INSTALLED=$HOST_LIB_PATH/libisl.so.$TARGET_ISL_LIB_VERSION;
-export MPFR_INSTALLED=$HOST_LIB_PATH/libmpfr.so.$TARGET_MPFR_LIB_VERSION;
-export GMP_INSTALLED=$HOST_LIB_PATH/libgmp.so.$TARGET_GMP_LIB_VERSION;
+export ISL_INSTALLED=$HOST_LIB_PATH/libisl.13.dylib;
+export MPFR_INSTALLED=$HOST_LIB_PATH/libmpfr.6.dylib;
+export GMP_INSTALLED=$HOST_LIB_PATH/libgmp.10.dylib;
 
 # ISL
 
 export SET_TARGET_BUILD=ISL;
 
 # Build and install isl into the toolchain.
-cd $TOOLCHAIN_ROOT_SYMBOLIC/isl/isl-$SET_ISL_VERSION && git fetch sm gcc-5 && git checkout FETCH_HEAD;
+cd $TOOLCHAIN_ROOT_SYMBOLIC/isl/isl-$SET_ISL_VERSION && git fetch github test && git checkout FETCH_HEAD;
 
 # ISL Build Configuration
 ./configure $HOST_PREFIX --with-gmp=system --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET;
@@ -228,7 +230,7 @@ if [ $ISL_INSTALLED = "yes" ] && [ $MPFR_INSTALLED = "yes" ] && [ $GMP_INSTALLED
 then
 
     # Make a system link for older version of libisl using the newer version for older systems
-    cd $HOST_LIB_PATH && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.10 && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.13.1.0 && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.13.1.1 && cd $BUILD_PATH;
+    cd $HOST_LIB_PATH && ln -s libisl.13.dylib libisl.10.dylib && cd $BUILD_PATH;
     sleep 5;
 
     echo "Preparing sabermod toolchain sources ...";
@@ -245,7 +247,7 @@ then
     export TOOLCHAIN_PREFIX=--prefix=$TOOLCHAIN_PREFIX_PATH;
 
     # GCC Build Configuration
-    ./configure $TOOLCHAIN_PREFIX --with-sysroot=/ --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET --program-transform-name='s&^&aarch64-&' --with-gcc-version=SaberMod --with-binutils-version=gnu --with-gmp-version=gnu --with-mpfr-version=gnu --with-gdb-version=gnu --with-mpc-version=gnu --with-isl-version=$SET_ISL_VERSION --enable-graphite=yes --enable-ld=default --disable-gold --enable-plugins --disable-option-checking --disable-bootstrap --disable-libmudflap --disable-libquadmath --disable-libsanitizer --enable-initfini-array "--enable-eh-frame-hdr-for-static" --enable-fix-cortex-a53-835769 --with-host-libstdcxx='-static-libgcc -Wl,-Bstatic,-lstdc++,-Bdynamic -lm' --with-gxx-include-dir=/usr/aarch64-linux-gnu/include/c++/$SET_SYSTEM_GCC_VERSION --enable-multilib --with-libexpat --with-python --with-gnu-ld --with-gnu-as --disable-werror --with-bugurl=mailto:sabermod.team@gmail.com --disable-libsanitizer --disable-libgomp --disable-libatomic --enable-silent-rules;
+    ./configure $TOOLCHAIN_PREFIX --with-sysroot=/ --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET --program-transform-name='s&^&aarch64-&' --with-gcc-version=SaberMod --with-binutils-version=gnu --with-gmp-version=gnu --with-mpfr-version=gnu --with-gdb-version=gnu --with-mpc-version=gnu --with-isl-version=$SET_ISL_VERSION --enable-graphite=yes --enable-ld=default --disable-gold --enable-plugins --disable-option-checking --disable-bootstrap --disable-libmudflap --disable-libquadmath --disable-libsanitizer --enable-initfini-array "--enable-eh-frame-hdr-for-static" --enable-fix-cortex-a53-835769 --with-host-libstdcxx='-static-libgcc -lstdc++ -lm' --with-gxx-include-dir=/usr/aarch64-linux-gnu/include/c++/$SET_SYSTEM_GCC_VERSION --enable-multilib --with-libexpat --with-python --with-gnu-ld --with-gnu-as --disable-werror --with-bugurl=mailto:sabermod.team@gmail.com --disable-libsanitizer --disable-libgomp --disable-libatomic --enable-silent-rules;
 
     echo "";
     echo "";
diff --git a/aarch64/darwin/aarch64-6.0 b/aarch64/darwin/aarch64-6.0
index dad2dfb..34eab94 100755
--- a/aarch64/darwin/aarch64-6.0
+++ b/aarch64/darwin/aarch64-6.0
@@ -28,7 +28,7 @@ export SET_TARGET_GCC_MAJOR=6;
 export SET_TARGET_GCC_MINOR=0;
 export SET_SYSTEM_GCC_VERSION=4.9.1;
 export SET_ISL_VERSION=0.15;
-export SET_HOST_BUILD=x86_64-linux-gnu;
+export SET_HOST_BUILD=x86_64-apple-darwin;
 export SET_TARGET=aarch64-linux-gnu;
 export SET_TARGET_GCC=aarch64-gcc;
 export SET_TARGET_GCC_LIB_PATH="lib/gcc/$SET_TARGET/$SET_TARGET_GCC_MAJOR.$SET_TARGET_GCC_MINOR.x-sabermod";
@@ -60,7 +60,9 @@ cd $TOOLCHAIN_ROOT_SYMBOLIC/build;
 export BUILD_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )";
 
 # Try to parallelize the build for faster performance.
-export JOBS="$(cat /proc/cpuinfo | grep -c processor)";
+CORES=`sysctl -a | grep machdep.cpu | grep core_count | awk '{print $2}'`;
+THREADS=`sysctl -a | grep machdep.cpu | grep thread_count | awk '{print $2}'`;
+JOBS="$((($CORES * $THREADS) / 2))";
 
 # Determine Make flags
 export MAKE_FLAGS=-j"$JOBS";
@@ -102,16 +104,16 @@ export HOST_PREFIX_PATH=$TOOLCHAIN_PREFIX_PATH;
 export HOST_LIB_PATH=$HOST_PREFIX_PATH/lib;
 export HOST_INC_PATH=$HOST_PREFIX_PATH/include;
 export HOST_PREFIX=--prefix=$HOST_PREFIX_PATH;
-export ISL_INSTALLED=$HOST_LIB_PATH/libisl.so.$TARGET_ISL_LIB_VERSION;
-export MPFR_INSTALLED=$HOST_LIB_PATH/libmpfr.so.$TARGET_MPFR_LIB_VERSION;
-export GMP_INSTALLED=$HOST_LIB_PATH/libgmp.so.$TARGET_GMP_LIB_VERSION;
+export ISL_INSTALLED=$HOST_LIB_PATH/libisl.13.dylib;
+export MPFR_INSTALLED=$HOST_LIB_PATH/libmpfr.6.dylib;
+export GMP_INSTALLED=$HOST_LIB_PATH/libgmp.10.dylib;
 
 # ISL
 
 export SET_TARGET_BUILD=ISL;
 
 # Build and install isl into the toolchain.
-cd $TOOLCHAIN_ROOT_SYMBOLIC/isl/isl-$SET_ISL_VERSION && git fetch sm master && git checkout FETCH_HEAD;
+cd $TOOLCHAIN_ROOT_SYMBOLIC/isl/isl-$SET_ISL_VERSION && git fetch github test && git checkout FETCH_HEAD;
 
 # ISL Build Configuration
 ./configure $HOST_PREFIX --with-gmp=system --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET;
@@ -228,8 +230,7 @@ if [ $ISL_INSTALLED = "yes" ] && [ $MPFR_INSTALLED = "yes" ] && [ $GMP_INSTALLED
 then
 
     # Make a system link for older version of libisl using the newer version for older systems
-    cd $HOST_LIB_PATH && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.10 && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.13.1.0 && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.13.1.1 && cd $BUILD_PATH;
-    sleep 5;
+	cd $HOST_LIB_PATH && ln -s libisl.13.dylib libisl.10.dylib && cd $BUILD_PATH;
 
     echo "Preparing sabermod toolchain sources ...";
     echo "";
@@ -245,7 +246,7 @@ then
     export TOOLCHAIN_PREFIX=--prefix=$TOOLCHAIN_PREFIX_PATH;
 
     # GCC Build Configuration
-    ./configure $TOOLCHAIN_PREFIX --with-sysroot=/ --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET --program-transform-name='s&^&aarch64-&' --with-gcc-version=SaberMod --with-binutils-version=gnu --with-gmp-version=gnu --with-mpfr-version=gnu --with-gdb-version=gnu --with-mpc-version=gnu --with-isl-version=$SET_ISL_VERSION --enable-graphite=yes --enable-ld=default --disable-gold --enable-plugins --disable-option-checking --disable-bootstrap --disable-libmudflap --disable-libquadmath --disable-libsanitizer --enable-initfini-array "--enable-eh-frame-hdr-for-static" --enable-fix-cortex-a53-835769 --with-host-libstdcxx='-static-libgcc -Wl,-Bstatic,-lstdc++,-Bdynamic -lm' --with-gxx-include-dir=/usr/aarch64-linux-gnu/include/c++/$SET_SYSTEM_GCC_VERSION --enable-multilib --with-libexpat --with-python --with-gnu-ld --with-gnu-as --disable-werror --with-bugurl=mailto:sabermod.team@gmail.com --disable-libsanitizer --disable-libgomp --disable-libatomic --enable-silent-rules;
+    ./configure $TOOLCHAIN_PREFIX --with-sysroot=/ --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET --program-transform-name='s&^&aarch64-&' --with-gcc-version=SaberMod --with-binutils-version=gnu --with-gmp-version=gnu --with-mpfr-version=gnu --with-gdb-version=gnu --with-mpc-version=gnu --with-isl-version=$SET_ISL_VERSION --enable-graphite=yes --enable-ld=default --disable-gold --enable-plugins --disable-option-checking --disable-bootstrap --disable-libmudflap --disable-libquadmath --disable-libsanitizer --enable-initfini-array "--enable-eh-frame-hdr-for-static" --enable-fix-cortex-a53-835769 --with-host-libstdcxx='-static-libgcc -lstdc++ -lm' --with-gxx-include-dir=/usr/aarch64-linux-gnu/include/c++/$SET_SYSTEM_GCC_VERSION --enable-multilib --with-libexpat --with-python --with-gnu-ld --with-gnu-as --disable-werror --with-bugurl=mailto:sabermod.team@gmail.com --disable-libsanitizer --disable-libgomp --disable-libatomic --enable-silent-rules;
 
     echo "";
     echo "";
diff --git a/aarch64/darwin/aarch64-linux-android-4.9 b/aarch64/darwin/aarch64-linux-android-4.9
index da59cc0..6b0322d 100755
--- a/aarch64/darwin/aarch64-linux-android-4.9
+++ b/aarch64/darwin/aarch64-linux-android-4.9
@@ -45,7 +45,7 @@ export SET_TARGET_GCC_MAJOR=4;
 export SET_TARGET_GCC_MINOR=9;
 export SET_CLOOG_VERSION=0.18.4;
 export SET_ISL_VERSION=0.15;
-export SET_HOST_BUILD=x86_64-linux-gnu;
+export SET_HOST_BUILD=x86_64-apple-darwin;
 export SET_TARGET=aarch64-linux-android;
 export SET_TARGET_GCC_LIB_PATH="lib/gcc/$SET_TARGET/$SET_TARGET_GCC_MAJOR.$SET_TARGET_GCC_MINOR.x-aosp-sabermod";
 export TARGET_ISL_LIB_VERSION=15.0.0;
@@ -76,7 +76,9 @@ cd $TOOLCHAIN_ROOT_SYMBOLIC/build;
 export BUILD_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )";
 
 # Try to parallelize the build for faster performance.
-export JOBS="$(cat /proc/cpuinfo | grep -c processor)";
+CORES=`sysctl -a | grep machdep.cpu | grep core_count | awk '{print $2}'`;
+THREADS=`sysctl -a | grep machdep.cpu | grep thread_count | awk '{print $2}'`;
+JOBS="$((($CORES * $THREADS) / 2))";
 
 # Determine Make flags
 export MAKE_FLAGS=-j"$JOBS"
@@ -118,9 +120,9 @@ export HOST_PREFIX_PATH=$TOOLCHAIN_PREFIX_PATH;
 export HOST_LIB_PATH=$HOST_PREFIX_PATH/lib;
 export HOST_INC_PATH=$HOST_PREFIX_PATH/include;
 export HOST_PREFIX=--prefix=$HOST_PREFIX_PATH;
-export CLOOG_INSTALLED=$HOST_LIB_PATH/libcloog-isl.so.4;
-export MPFR_INSTALLED=$HOST_LIB_PATH/libmpfr.so.$TARGET_MPFR_LIB_VERSION;
-export GMP_INSTALLED=$HOST_LIB_PATH/libgmp.so.$TARGET_GMP_LIB_VERSION;
+export CLOOG_INSTALLED=$HOST_LIB_PATH/libcloog-isl.4.dylib;
+export MPFR_INSTALLED=$HOST_LIB_PATH/libmpfr.6.dylib;
+export GMP_INSTALLED=$HOST_LIB_PATH/libgmp.10.dylib;
 
 # Build and install cloog, isl and osl libraries into the toolchain.
 
@@ -128,7 +130,7 @@ export GMP_INSTALLED=$HOST_LIB_PATH/libgmp.so.$TARGET_GMP_LIB_VERSION;
 export SET_TARGET_BUILD=CLOOG;
 
 # Make sure ISL is on the right 0.15 branch
-cd $TOOLCHAIN_ROOT_SYMBOLIC/isl/isl-$SET_ISL_VERSION && git fetch sm gcc-5 && git checkout FETCH_HEAD;
+cd $TOOLCHAIN_ROOT_SYMBOLIC/isl/isl-$SET_ISL_VERSION && git fetch github test && git checkout FETCH_HEAD;
 
 # Cloog Build Configuration
 cd $TOOLCHAIN_ROOT_SYMBOLIC/cloog/cloog-$SET_CLOOG_VERSION && ./configure $HOST_PREFIX --with-isl=bundled --with-osl=bundled --with-gmp=system --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET;
@@ -249,8 +251,7 @@ if [ $CLOOG_INSTALLED = "yes" ] && [ $MPFR_INSTALLED = "yes" ] && [ $GMP_INSTALL
 then
 
     # Make a system link for older version of libisl using the newer version for older systems
-    cd $HOST_LIB_PATH && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.10 && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.13.1.0 && ln -s libisl.so.$TARGET_ISL_LIB_VERSION libisl.so.13.1.1 && cd $BUILD_PATH;
-    sleep 5;
+    cd $HOST_LIB_PATH && ln -s libisl.13.dylib libisl.10.dylib && cd $BUILD_PATH;
 
     echo "Preparing sabermod toolchain sources ...";
     echo "";
@@ -261,7 +262,7 @@ then
     cd $TOOLCHAIN_ROOT_SYMBOLIC/sysroot && rm -rf * && git reset --hard && git fetch sm gcc-$SET_TARGET_GCC_MAJOR.$SET_TARGET_GCC_MINOR && git checkout FETCH_HEAD && cd $BUILD_PATH;
     export SYSROOT_SRC_PATH=$TOOLCHAIN_ROOT_SYMBOLIC/sysroot/arch-arm64;
     export SYSROOT_DEST_PATH=$TOOLCHAIN_PREFIX_PATH/arch-arm64;
-    cp -R $SYSROOT_SRC_PATH -f $SYSROOT_DEST_PATH;
+    cp -vr $SYSROOT_SRC_PATH $SYSROOT_DEST_PATH;
     export SYSROOT=--with-sysroot=$SYSROOT_DEST_PATH;
 
     # Make sure gcc is on the right remote branch 4.9.x
@@ -275,7 +276,7 @@ then
     export TOOLCHAIN_PREFIX=--prefix=$TOOLCHAIN_PREFIX_PATH;
 
     # GCC Build Configuration
-    ./configure $TOOLCHAIN_PREFIX $SYSROOT --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET --program-transform-name='s&^&aarch64-linux-android-&' --with-gcc-version=SaberMod --with-binutils-version=android --with-gmp-version=gnu --with-mpfr-version=gnu --with-gdb-version=android --with-mpc-version=gnu --with-cloog-version=$SET_CLOOG_VERSION --with-isl-version=$SET_ISL_VERSION --enable-graphite=yes --enable-ld=default --disable-gold --enable-plugins --disable-option-checking --disable-bootstrap --disable-libmudflap --disable-libquadmath --enable-libsanitizer --enable-initfini-array "--enable-eh-frame-hdr-for-static" --enable-fix-cortex-a53-835769 --with-host-libstdcxx='-static-libgcc -Wl,-Bstatic,-lstdc++,-Bdynamic -lm' --with-gxx-include-dir=$SYSROOT_DEST_PATH/c++ --enable-multilib --with-libexpat --with-python --with-gnu-ld --with-gnu-as --disable-werror --with-bugurl=mailto:sabermod.team@gmail.com --enable-silent-rules;
+    ./configure $TOOLCHAIN_PREFIX $SYSROOT --host=$SET_HOST_BUILD --build=$SET_HOST_BUILD --target=$SET_TARGET --program-transform-name='s&^&aarch64-linux-android-&' --with-gcc-version=SaberMod --with-binutils-version=android --with-gmp-version=gnu --with-mpfr-version=gnu --with-gdb-version=android --with-mpc-version=gnu --with-cloog-version=$SET_CLOOG_VERSION --with-isl-version=$SET_ISL_VERSION --enable-graphite=yes --enable-ld=default --disable-gold --enable-plugins --disable-option-checking --disable-bootstrap --disable-libmudflap --disable-libquadmath --enable-libsanitizer --enable-initfini-array "--enable-eh-frame-hdr-for-static" --enable-fix-cortex-a53-835769 --with-host-libstdcxx='-static-libgcc -lstdc++ -lm' --with-gxx-include-dir=$SYSROOT_DEST_PATH/c++ --enable-multilib --with-libexpat --with-python --with-gnu-ld --with-gnu-as --disable-werror --with-bugurl=mailto:sabermod.team@gmail.com --enable-silent-rules;
 
     echo "";
     echo "";
-- 
2.3.2 (Apple Git-55)

